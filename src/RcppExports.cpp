// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// qatd_cpp_is_overlap
bool qatd_cpp_is_overlap(SEXP x1_, SEXP y1_, SEXP w1_, SEXP h1_, SEXP boxe_);
RcppExport SEXP _quanteda_textplots_qatd_cpp_is_overlap(SEXP x1_SEXP, SEXP y1_SEXP, SEXP w1_SEXP, SEXP h1_SEXP, SEXP boxe_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x1_(x1_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type y1_(y1_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type w1_(w1_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type h1_(h1_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type boxe_(boxe_SEXP);
    rcpp_result_gen = Rcpp::wrap(qatd_cpp_is_overlap(x1_, y1_, w1_, h1_, boxe_));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_quanteda_textplots_qatd_cpp_is_overlap", (DL_FUNC) &_quanteda_textplots_qatd_cpp_is_overlap, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_quanteda_textplots(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
